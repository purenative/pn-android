plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'maven-publish'
    id 'kotlin-parcelize'
}

android {
    namespace 'pn.android.compose'
    compileSdk compile_sdk_version

    defaultConfig {
        minSdk min_sdk_version
        targetSdk target_sdk_version

        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        coreLibraryDesugaringEnabled true
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    kotlinOptions {
        jvmTarget = '11'
    }

    buildFeatures {
        compose true
    }

    composeOptions {
        kotlinCompilerExtensionVersion compose_version
    }

}

dependencies {

    coreLibraryDesugaring "com.android.tools:desugar_jdk_libs:$desugar_jdk_version"

    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_runtime_ktx_version"

    implementation platform("androidx.compose:compose-bom:$compose_bom_version")
    implementation "androidx.compose.ui:ui"
    implementation "androidx.compose.material:material"
    implementation "androidx.compose.ui:ui-tooling-preview"
    debugImplementation "androidx.compose.ui:ui-tooling"

    implementation "io.github.raamcosta.compose-destinations:animations-core:$compose_destinations_version"

    implementation "com.jakewharton.timber:timber:$timber_version"

    implementation "io.coil-kt:coil-compose:$coil_version"
    implementation "io.coil-kt:coil-video:$coil_version"
    implementation "io.coil-kt:coil-gif:$coil_version"

    implementation "com.google.accompanist:accompanist-pager:$accompanist_version"
    implementation "com.google.accompanist:accompanist-pager-indicators:$accompanist_version"

    implementation "com.kizitonwose.calendar:compose:$calendar_version"

    implementation "com.valentinilk.shimmer:compose-shimmer:$shimmer_version"
}

publishing {
    publications {
        release(MavenPublication) {
            groupId = group_id
            artifactId = 'compose'
            version = library_version

            afterEvaluate {
                from components.release
            }
        }
    }
}